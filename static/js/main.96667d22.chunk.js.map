{"version":3,"sources":["assets/winner.jpg","assets/tryagain.jpg","Components/CounterPanel/StyledComponents/index.tsx","Components/CounterPanel/index.tsx","Components/utils.tsx","Components/constants.js","Components/PlayerCard/StyledComponents/index.tsx","Components/PlayerCard/index.tsx","Components/Game/StyledComponents/index.tsx","Components/Game/index.tsx","App.tsx","index.tsx"],"names":["module","exports","CounterPanelContainer","styled","div","CounterText","p","props","inputColor","CounterPanel","score","counterScore","i","push","key","ApiService","axios","get","response","data","players","PlayerCardContainer","PlayerDataContainer","button","TextName","PlayerImage","img","PlayerCard","firstName","lastName","ffpg","showResult","handlePlayerClick","imageSource","name","onClick","src","uri","toPrecision","GameContainer","GlobalHeader","TopLogoImage","attrs","WinnerImage","WinnerImageSrc","alt","TryAgainImage","TryAgainSrc","TopLogoLink","a","HeaderContainer","HeaderText","span","LoadingText","BottomContainer","RestartButtonContainer","ContinueButtonContainer","BottomText","ButtonText","PlayersCardContainer","Game","initialState","queryPerformed","gameOver","playersRaw","guessRight","useState","state","setState","playersToPlay","playerOne","playerTwo","isWinner","useEffect","isStopped","getPlayers","console","error","loadPlayers","slice","shift","href","target","length","first_name","last_name","images","default","url","fppg","Fragment","handleContinueClick","Style","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96667d22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/winner.94dba320.jpg\";","module.exports = __webpack_public_path__ + \"static/media/tryagain.0b7b3ea4.jpg\";","import styled from \"styled-components\";\nimport { CounterTextProps } from \"../../interfaces\";\n\nexport const CounterPanelContainer = styled.div`\n  background: radial-gradient(ellipse, #0facfd 16%, #1493ff 100%);\n  display: flex;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-evenly;\n  border-radius: 16px;\n`;\nexport const CounterText = styled.p<CounterTextProps>`\n  color: ${(props): string => props.inputColor};\n`;\n","import React from \"react\";\nimport { CounterProps } from \"../interfaces\";\nimport { CounterPanelContainer, CounterText } from \"./StyledComponents\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst counterScore = (score: number): Array<any> => {\n  const counterScore = [];\n\n  for (let i = 1; i <= 10; i++) {\n    counterScore.push(\n      <CounterText key={i} inputColor={i <= score ? \"black\" : \"yellow\"}>\n        {i}\n      </CounterText>,\n    );\n  }\n  return counterScore;\n};\nconst CounterPanel: React.FC<CounterProps> = props => {\n  const { score } = props;\n  return <CounterPanelContainer>{counterScore(score)}</CounterPanelContainer>;\n};\n\nexport default CounterPanel;\n","import axios from \"axios\";\nimport { DATA_URL } from \"./constants\";\nimport { Player } from \"./interfaces\";\n\nexport default class ApiService {\n  static async getPlayers(): Promise<Array<Player>> {\n    const response = await axios.get(DATA_URL);\n    return response.data.players ? response.data.players : [];\n  }\n}\n","export const MAX_SCORE = 10;\nexport const SUCCESSFUL_GUESS = 1;\nexport const FAILED_GUESS = 2;\nexport const PENDING_GUESS = 3;\nexport const DATA_URL =\n  \"https://gist.githubusercontent.com/liamjdouglas/bb40ee8721f1a9313c22c6ea0851a105/raw/6b6fc89d55ebe4d9b05c1469349af33651d7e7f1/Player.json\";\nexport const LOGO_URL = \"https://s3.amazonaws.com/cdn.fanduel.com/images/2019/Homepage/Home/fd-shield-logo.svg\";\n","import styled from \"styled-components\";\n\nexport const PlayerCardContainer = styled.div`\n  background-color: forestgreen;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-start;\n  margin: 5px 10px 5px 10px;\n`;\nexport const PlayerDataContainer = styled.button`\n  background-color: #99a8b1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  height: 182px;\n`;\n\nexport const TextName = styled.p``;\nexport const PlayerImage = styled.img`\n  width: 150px;\n  height: 150px;\n`;\n","import React from \"react\";\nimport { PlayerProps } from \"../interfaces\";\nimport { PlayerCardContainer, PlayerDataContainer, PlayerImage, TextName } from \"./StyledComponents\";\n\nconst PlayerCard: React.FC<PlayerProps> = props => {\n  const { firstName, lastName, ffpg, showResult, handlePlayerClick, imageSource } = props;\n  const name = firstName + \" \" + lastName;\n  return (\n    <PlayerCardContainer>\n      <PlayerDataContainer onClick={handlePlayerClick}>\n        <PlayerImage src={imageSource.uri} />\n        <TextName>Name: {name}</TextName>\n        {showResult && ffpg && <TextName>FFPG: {ffpg.toPrecision(10)}</TextName>}\n      </PlayerDataContainer>\n    </PlayerCardContainer>\n  );\n};\nexport default PlayerCard;\n","import styled from \"styled-components\";\nimport { LOGO_URL } from \"../../constants\";\nimport WinnerImageSrc from \"../../../assets/winner.jpg\";\nimport TryAgainSrc from \"../../../assets/tryagain.jpg\";\n\nexport const GameContainer = styled.div`\n  padding: 10px 30px;\n  margin: 0 auto;\n  max-width: 1441px;\n  background-color: #152a47;\n  flex-direction: column;\n`;\nexport const GlobalHeader = styled.div`\n  padding-bottom: 19px;\n  text-align: center;\n`;\nexport const TopLogoImage = styled.img.attrs({\n  src: LOGO_URL,\n})`\n  height: 28px;\n`;\nexport const WinnerImage = styled.img.attrs({\n  src: WinnerImageSrc,\n  alt: \"You won\",\n})`\n  height: 192px;\n  margin-top: 5px;\n`;\nexport const TryAgainImage = styled.img.attrs({\n  src: TryAgainSrc,\n  alt: \"Try again\",\n})`\n  height: 192px;\n  margin-top: 5px;\n`;\nexport const TopLogoLink = styled.a``;\nexport const HeaderContainer = styled.div`\n  align-items: center;\n  background: radial-gradient(ellipse, #0facfd 16%, #1493ff 100%);\n  color: #ffff;\n  justify-content: center;\n  margin: 0 5px 5px 0;\n  padding: 5px;\n  border-radius: 16px;\n`;\nexport const HeaderText = styled.span`\n  margin: 0 5px 0 5px;\n  font-size: 18px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nexport const LoadingText = styled.span`\n  margin: 5px 5px 0 5px;\n  font-size: 18px;\n  color: aliceblue;\n`;\nexport const BottomContainer = styled.div`\n  display: flex;\n  height: 25px;\n  background: radial-gradient(ellipse, #0facfd 16%, #1493ff 100%);\n  justify-content: center;\n  align-items: center;\n  margin: 0 5px 5px 0;\n  border-radius: 16px;\n  padding: 5px;\n`;\nexport const RestartButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #1493ff;\n  justify-content: center;\n  align-items: center;\n  margin: 0 5px 5px 0;\n  padding: 5px;\n  border-radius: 16px;\n`;\nexport const ContinueButtonContainer = styled.button`\n  background-color: #fff;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  border-radius: 12px;\n  padding: 5px;\n  margin-left: 5px;\n`;\nexport const BottomText = styled.p`\n  color: #ffff;\n`;\nexport const ButtonText = styled.p`\n  color: #1493ff;\n  background: #fff;\n`;\nexport const PlayersCardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  flex-wrap: wrap;\n  margin-bottom: 5px;\n  border-radius: 12px;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport CounterPanel from \"../CounterPanel\";\nimport { PENDING_GUESS, SUCCESSFUL_GUESS, FAILED_GUESS, MAX_SCORE } from \"../constants\";\nimport ApiService from \"../utils\";\nimport { Player, StateType } from \"../interfaces\";\nimport PlayerCard from \"../PlayerCard\";\nimport {\n  BottomContainer,\n  BottomText,\n  ButtonText,\n  ContinueButtonContainer,\n  GameContainer,\n  GlobalHeader,\n  HeaderContainer,\n  HeaderText,\n  LoadingText,\n  PlayersCardContainer,\n  RestartButtonContainer,\n  TopLogoImage,\n  TopLogoLink,\n  TryAgainImage,\n  WinnerImage,\n} from \"./StyledComponents\";\n\nconst Game: React.FC = () => {\n  const initialState = {\n    score: 0,\n    showResult: false,\n    queryPerformed: false,\n    gameOver: false,\n    players: [],\n    playersRaw: [],\n    guessRight: PENDING_GUESS,\n  };\n\n  const [state, setState] = useState<StateType>(initialState);\n  const handlePlayerClick = (\n    playersToPlay: Array<Player>,\n    playerOne: Player,\n    playerTwo: Player,\n    isWinner: boolean,\n  ): void => {\n    if (state.guessRight === PENDING_GUESS) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-ignore\n      setState({\n        ...state,\n        showResult: true,\n        guessRight: isWinner ? SUCCESSFUL_GUESS : FAILED_GUESS,\n      });\n    }\n  };\n  const handleContinueClick = (playersToPlay: Array<Player>): void => {\n    const score = state.guessRight === SUCCESSFUL_GUESS ? state.score + 1 : state.score;\n    setState({\n      ...state,\n      score: score,\n      gameOver: score === MAX_SCORE,\n      showResult: false,\n      players: playersToPlay,\n      guessRight: PENDING_GUESS,\n    });\n  };\n  const handleRestartGameClick = (): void => {\n    setState({\n      ...state,\n      score: 0,\n      showResult: false,\n      queryPerformed: true,\n      gameOver: false,\n      players: state.playersRaw,\n      guessRight: PENDING_GUESS,\n    });\n  };\n  useEffect(() => {\n    // Basic implementation to handle race conditions\n    // When component might unmount before API call finishes\n    let isStopped = false;\n    if (!isStopped) {\n      const loadPlayers = async (): Promise<void> => {\n        try {\n          const players = await ApiService.getPlayers();\n          if (!isStopped && players) {\n            setState({\n              ...state,\n              queryPerformed: true,\n              players: players,\n              playersRaw: players,\n            });\n          }\n        } catch (error) {\n          console.error(error);\n        }\n      };\n      loadPlayers();\n    }\n    return () => {\n      isStopped = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const playersToPlay = state.players.slice();\n  const score = state.score;\n  const playerOne = playersToPlay.shift();\n  const playerTwo = playersToPlay.shift();\n  return (\n    <GameContainer>\n      <GlobalHeader>\n        <TopLogoLink href=\"/\" target=\"_self\">\n          <TopLogoImage />\n        </TopLogoLink>\n      </GlobalHeader>\n      <HeaderContainer>\n        <HeaderText>Select the player with the higher FanDuel Points Per Game (FPPG). </HeaderText>\n      </HeaderContainer>\n      <CounterPanel score={state.score} />\n      <PlayersCardContainer>\n        {state.players.length === 0 &&\n          (state.queryPerformed ? (\n            <LoadingText>Error Loading Players</LoadingText>\n          ) : (\n            <LoadingText>Loading Players...</LoadingText>\n          ))}\n        {score < MAX_SCORE && playerOne && playerTwo && (\n          <PlayerCard\n            firstName={playerOne.first_name}\n            lastName={playerOne.last_name}\n            imageSource={{ uri: playerOne.images.default.url }}\n            ffpg={playerOne.fppg}\n            showResult={state.showResult}\n            handlePlayerClick={(): void =>\n              handlePlayerClick(playersToPlay, playerOne, playerTwo, playerOne.fppg > playerTwo.fppg)\n            }\n          />\n        )}\n        {score < MAX_SCORE && playerOne && playerTwo && (\n          <PlayerCard\n            firstName={playerTwo.first_name}\n            lastName={playerTwo.last_name}\n            imageSource={{ uri: playerTwo.images.default.url }}\n            ffpg={playerTwo.fppg}\n            showResult={state.showResult}\n            handlePlayerClick={(): void =>\n              handlePlayerClick(playersToPlay, playerOne, playerTwo, playerTwo.fppg > playerOne.fppg)\n            }\n          />\n        )}\n        {!playerOne || (!playerTwo && <TryAgainImage />)}\n        {score === MAX_SCORE && <WinnerImage />}\n      </PlayersCardContainer>\n      {state.guessRight !== PENDING_GUESS ? (\n        <BottomContainer>\n          <React.Fragment>\n            <BottomText>{state.guessRight === SUCCESSFUL_GUESS ? \"Well done! \" : \"You missed this one!\"}</BottomText>\n            <ContinueButtonContainer onClick={(): void => handleContinueClick(playersToPlay)}>\n              <ButtonText>Continue</ButtonText>\n            </ContinueButtonContainer>\n          </React.Fragment>\n        </BottomContainer>\n      ) : (\n        <React.Fragment>\n          {!state.gameOver && (\n            <BottomContainer>\n              <BottomText>{\"Click on a player to guess\"}</BottomText>\n            </BottomContainer>\n          )}\n        </React.Fragment>\n      )}\n      {(state.gameOver || state.players.length === 1) && (\n        <RestartButtonContainer>\n          <ContinueButtonContainer onClick={(): void => handleRestartGameClick()}>\n            <ButtonText>Restart Game</ButtonText>\n          </ContinueButtonContainer>\n        </RestartButtonContainer>\n      )}\n    </GameContainer>\n  );\n};\nexport default Game;\n","import React from \"react\";\nimport Game from \"./Components/Game\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst Style = createGlobalStyle`\n  p {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  body, html {\n    height: 100%;\n    background-color: #152a47;\n    margin: 0;\n    padding: 0;\n    overflow-x: hidden;\n    overflow-y: auto;\n  }\n`;\nconst App: React.FC<{}> = () => {\n  return (\n    <React.Fragment>\n      <Style />\n      <Game />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}